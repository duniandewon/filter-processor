services:
  redis:
    image: redis:6.2-alpine
    container_name: redis
    hostname: redis
    restart: always
    ports:
      - "6379:6379"
    command: redis-server --save 20 1 --loglevel warning --requirepass ${REDIS_PASSWORD}
    volumes:
      - redis_data:/data
    env_file:
      - .env
    environment:
      - REDIS_PORT=6379
      - REDIS_DATABASES=16
    networks:
      - app-network
    healthcheck:
      test: ["CMD", "redis-cli", "-a", "${REDIS_PASSWORD}", "ping"]
      interval: 5s
      timeout: 3s
      retries: 5

  fastapi-app:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: xmp-processor-server
    ports:
      - "8000:8000"
    environment:
      - REDIS_URL=${REDIS_URL}

      - FIREBASE_STORAGE_BUCKET=${FIREBASE_STORAGE_BUCKET}
      - FIREBASE_DATABASE_URL=${FIREBASE_DATABASE_URL}
      - FIREBASE_SERVICE_ACCOUNT_KEY_JSON=${FIREBASE_SERVICE_ACCOUNT_KEY_JSON}

      - ENV=${ENV:-development}
      - DEBUG=${DEBUG:-true}
      - SECRET_KEY=${SECRET_KEY:-your-secret-key-here}

      - API_V1_STR=${API_V1_STR:-/api/v1}
      - BACKEND_CORS_ORIGINS=${BACKEND_CORS_ORIGINS:-["http://localhost:3000", "http://localhost:8080"]}

      - ACCESS_TOKEN_EXPIRE_MINUTES=${ACCESS_TOKEN_EXPIRE_MINUTES:-30}
    volumes:
      - ./app:/app/app
      - ./logs:/app/logs
    restart: unless-stopped
    depends_on:
      redis:
        condition: service_healthy
    networks:
      - app-network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8000/health"]
      interval: 30s
      timeout: 10s
      retries: 3

  celery_worker:
    build:
      context: .
      dockerfile: docker/Dockerfile.worker
    container_name: celery_worker
    env_file:
      - .env
    environment:
      - CELERY_BROKER_URL=${REDIS_URL}/0
      - CELERY_RESULT_BACKEND=${REDIS_URL}/1
    volumes:
      - .:/app
    depends_on:
      fastapi-app:
        condition: service_healthy
      redis:
        condition: service_healthy
    command: celery -A app.core.celery_app worker --loglevel=info --concurrency=2
    networks:
      - app-network

  flower:
    build: .
    container_name: flower
    ports:
      - "5555:5555"
    env_file:
      - .env
    environment:
      - CELERY_BROKER_URL=${REDIS_URL}/0
      - CELERY_RESULT_BACKEND=${REDIS_URL}/1
    volumes:
      - .:/app
    depends_on:
      redis:
        condition: service_healthy
      celery_worker:
        condition: service_started
    command: celery -A app.core.celery_app flower --port=5555
    networks:
      - app-network
    restart: unless-stopped

networks:
  app-network:
    driver: bridge

volumes:
  redis_data:
    driver: local
